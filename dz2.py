


# -------------------------------------1-----------------------------------------------
#Создать список и заполнить его элементами различных типов данных.
#Реализовать скрипт проверки типа данных каждого элемента.
#Использовать функцию type() для проверки типа.
#Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

my_list = [2, None, True, "string", 2.5, [1, 2, 2.5], {1, 4, True}]
for el in my_list:
    print(type(el))
'''

'''
# -----------------------------------2---------------------------------------------------
# Для списка реализовать обмен значений соседних элементов,
# т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

my_list = list(input("Введите значения, входящие в список"))
j = 0
for i in range(int(len(my_list) // 2)):
    my_list[j], my_list[j + 1] = my_list[j + 1], my_list[j]
    j += 2
print(my_list)

# -------------------------------------3-----------------------------------
# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

month = int((input("Введите месяц года в цифровом выражении от 1 до 12")))
a = [1,2,3,4,5,6,7,8,9,10,11,12]
if month in range(a[0],a[2]):
    print("зима")
elif month in range(a[2],a[5]):
    print("весна")
elif month in range(a[5],a[8]):
    print("лето")
elif month in range(a[8],a[11]):
    print("осень")
else:
    print("зима")

# вариаент со словарем

month = int((input("Введите месяц года в цифровом выражении от 1 до 12")))
month_dict = {1:"зима",2:"зима", 3:"весна", 4:"весна", 5:"весна", 6:"лето", 7:"лето", 8:"лето", 9:"осень", 10:"осень", 11:"осень", 12:"зима"}
if month not in month_dict:
    print("Вы ошиблись в значении месяца")
print(month_dict.setdefault(month))



# -------------------------------------4-------------------------------------------------
#Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово
# с новой строки. Строки необходимо пронумеровать. Если в слово длинное,
# выводить только первые 10 букв в слове.

a = input("Введите несколько слов, разделенных пробелами").split()
for n,i in enumerate(a, start = 1):
    if len(i) <= 10:
        print(n,i)
    else:
        print(n,i[:10])


# ------------------------------------5-----------------------------------------
# Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы
# с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.

a = [3, 4, 8, 8, 2]
print(a)
b = int(input("Введите натуральное число"))
for el in range(len(a)):
    if a[el] == b:
        a.insert(el + 1, b)
        break
    if a[0] < b:
        a.insert(0,b)
        break
    if a[-1] > b:
        a.append(b)
        break
    if a[el] > b and a[el + 1] < b:
        a.insert(el + 1,b)
        break
print(a)
